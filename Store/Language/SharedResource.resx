<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="HaveAccount" xml:space="preserve">
    <value>You Have An Account? Then </value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="CreateAccount" xml:space="preserve">
    <value>Create An Account</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Full Name</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Dosen't Have Account" xml:space="preserve">
    <value>Didin't Have Account? Then </value>
  </data>
  <data name="LoginAccount" xml:space="preserve">
    <value>Login To Account</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember Me</value>
  </data>
  <data name="EditProfile" xml:space="preserve">
    <value>Edit Profile</value>
  </data>
  <data name="SaveChanger" xml:space="preserve">
    <value>Save Changes</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>Log Out</value>
  </data>
  <data name="DeleteAccount" xml:space="preserve">
    <value>Delete Account</value>
  </data>
  <data name="EditPassword" xml:space="preserve">
    <value>Edit Password</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change Password</value>
  </data>
  <data name="OldPassword" xml:space="preserve">
    <value>Old Password</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="BackToDetails" xml:space="preserve">
    <value>Back To Details</value>
  </data>
  <data name="BackToHome" xml:space="preserve">
    <value>Back to Home</value>
  </data>
  <data name="SelectRole" xml:space="preserve">
    <value>Select Role</value>
  </data>
  <data name="SelectCategory" xml:space="preserve">
    <value>Select Category</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="Cart" xml:space="preserve">
    <value>Cart</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="AddProduct" xml:space="preserve">
    <value>Add Product</value>
  </data>
  <data name="ShopNow" xml:space="preserve">
    <value>Shop Now</value>
  </data>
  <data name="YourShoppingCart" xml:space="preserve">
    <value>Your Shopping Cart</value>
  </data>
  <data name="ShopProducts" xml:space="preserve">
    <value>Shop Products</value>
  </data>
  <data name="BackToProducts" xml:space="preserve">
    <value>Back To Products</value>
  </data>
  <data name="OrderDetails" xml:space="preserve">
    <value>Order Details</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="Arabic" xml:space="preserve">
    <value>العربية</value>
  </data>
  <data name="SearchProducts" xml:space="preserve">
    <value>Search products...</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="ContinueShopping" xml:space="preserve">
    <value>Continue Shopping</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="YourCartIsEmpty" xml:space="preserve">
    <value>Your cart is empty.</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="ClearAll" xml:space="preserve">
    <value>Clear Cart</value>
  </data>
  <data name="ProceedToCheckout" xml:space="preserve">
    <value>Checkout</value>
  </data>
  <data name="AddToCart" xml:space="preserve">
    <value>Add to Cart</value>
  </data>
  <data name="OutOfStock" xml:space="preserve">
    <value>Out of Stock</value>
  </data>
  <data name="ProductName" xml:space="preserve">
    <value>Product Name</value>
  </data>
  <data name="ProductPrice" xml:space="preserve">
    <value>Product Price</value>
  </data>
  <data name="StockQuantity" xml:space="preserve">
    <value>Stock Quantity</value>
  </data>
  <data name="ProductImage" xml:space="preserve">
    <value>Product Image</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="Show" xml:space="preserve">
    <value>Show</value>
  </data>
  <data name="Hide" xml:space="preserve">
    <value>Hide</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="PleaseWait" xml:space="preserve">
    <value>Please Wait</value>
  </data>
  <data name="NoProductsAvailable" xml:space="preserve">
    <value>No products available.</value>
  </data>
  <data name="UnnamedProduct" xml:space="preserve">
    <value>Unnamed Product</value>
  </data>
  <data name="NoCategory" xml:space="preserve">
    <value>No Category</value>
  </data>
  <data name="UnknownSeller" xml:space="preserve">
    <value>Unknown Seller</value>
  </data>
  <data name="InStock" xml:space="preserve">
    <value>In Stock</value>
  </data>
  <data name="NoOrderFound" xml:space="preserve">
    <value>No order found or the order is empty.</value>
  </data>
  <data name="CreatedAt" xml:space="preserve">
    <value>Created At</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="TotalPrice" xml:space="preserve">
    <value>Total Price</value>
  </data>
  <data name="Pending" xml:space="preserve">
    <value>Pending</value>
  </data>
  <data name="Shipped" xml:space="preserve">
    <value>Shipped</value>
  </data>
  <data name="Delivered" xml:space="preserve">
    <value>Delivered</value>
  </data>
  <data name="CustomerNotes" xml:space="preserve">
    <value>Customer Notes</value>
  </data>
  <data name="OrderItems" xml:space="preserve">
    <value>Order Items</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="UnitPrice" xml:space="preserve">
    <value>Unit Price</value>
  </data>
  <data name="Subtotal" xml:space="preserve">
    <value>Subtotal</value>
  </data>
  <data name="AddNoteToOrder" xml:space="preserve">
    <value>Add a note to your order (optional)</value>
  </data>
  <data name="SpecialInstructions" xml:space="preserve">
    <value>Any special instructions or delivery notes...</value>
  </data>
  <data name="SaveNote" xml:space="preserve">
    <value>Save Note</value>
  </data>
  <data name="ConfirmOrder" xml:space="preserve">
    <value>Confirm Order</value>
  </data>
  <data name="CancelOrder" xml:space="preserve">
    <value>Cancel Order</value>
  </data>
  <data name="OrderProcessed" xml:space="preserve">
    <value>Order has been processed.</value>
  </data>
  <data name="EnterProductName" xml:space="preserve">
    <value>Enter Product Name</value>
  </data>
  <data name="EnterPrice" xml:space="preserve">
    <value>Enter Price</value>
  </data>
  <data name="EnterStock" xml:space="preserve">
    <value>Enter Stock Quantity</value>
  </data>
  <data name="Chat" xml:space="preserve">
    <value>Chat</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="BackToCart" xml:space="preserve">
    <value>Back To Cart</value>
  </data>
  <data name="GoToOrder" xml:space="preserve">
    <value>Reach To Order</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome To VStore :)</value>
  </data>
  <data name="StartShopping" xml:space="preserve">
    <value>Start Shopping</value>
  </data>
  <data name="SeekForProducts" xml:space="preserve">
    <value>Explore Best Products And Beleive We Are Not Hackers </value>
  </data>
</root>